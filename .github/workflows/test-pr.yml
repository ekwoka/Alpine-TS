name: Perform Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  collection-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.ls.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Gather package directories
        id: ls
        run: echo "packages=[$(ls -d packages/* | sed 's/packages\///' | sed 's/[^[:alnum:]]/\\&/g' | sed 's/.*/"&",/' | tr -d '\n' | sed '$s/,$//')]" >> $GITHUB_OUTPUT

Lint:
    runs-on: ubuntu-latest
    needs: [collection-packages]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.collection-packages.outputs.packages) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Run Biome
        run: biome ci packages/${{ matrix.package }}

  Test:
    runs-on: ubuntu-latest
    needs: [collection-packages]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.collection-packages.outputs.packages) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          standalone: true
          run_install: true

      - name: Test
        run: pnpm --filter @alpinets/${{matrix.package}} run test --run --reporter=verbose

  Build:
    runs-on: ubuntu-latest
    needs: [collection-packages]
    strategy:
      matrix:
        package: ${{ fromJSON(needs.collection-packages.outputs.packages) }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          standalone: true
          run_install: true

      - name: Build Package
        run: pnpm --filter @alpinets/${{matrix.package}} build

  check-success:
    runs-on: ubuntu-latest
    needs: [Lint, Test, Build]
    if: success()
    outputs:
      was_successful: ${{ steps.check-success.outputs.was_successful }}
    steps:
      - name: Check if all jobs were successful
        id: check-success
        run: |
          echo "was_successful=true" >> $GITHUB_OUTPUT

  was-successful:
    runs-on: ubuntu-latest
    needs: [check-success]
    if: always()
    steps:
      - name: Was Successful
        run: |
          passed="${{ needs.check-success.outputs.was_successful }}"
          if [[ $passed == "true" ]]; then
            echo "All checks passed"
            exit 0
          else
            echo "Check(s) failed"
            exit 1
          fi
